#!/bin/bash

set -e

usage() {
cat << EOF
usage: $0 [<options>]
       $0 <command> [<options>]

Available commands:
  clean                        delete all files and directories generated by prepare
  help                         show this help
  prepare                      only prepare repository (do not serve or generate)
  generate                     generate the site (into /public by default)
  server                       serve your current site (defaults to http://localhost:1313)
  self-hosted-legacy-server    serve (defaults to http://localhost:1313/self-hosted-legacy)

Flags:
  -p, --port int               port on which the server will listen (default 1313)
  -D, --[no]buildDrafts        include (or exclude) content marked as draft (default is including for server and excluding for generation)
      --[no]prepare            include (or exclude) the preparation phase ie. retrieve modules and sub repositories (default prepare)
EOF
}

# Default values for parameters

PORT=1313
ENVIRONMENT=production
COMMAND="server"
WITHDRAFTS=
PREPARE=true

dir=$(cd -P -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)

cd "$dir/.."

MYTMPDIR="$(mktemp -d)"

if [ -z "$DEBUG" ]; then
  trap 'rm -rf -- "$MYTMPDIR"' EXIT
fi

clean() {
  echo "=====> cleaning phase"
  rm -Rf \
    ./package.json \
    ./package-lock.json \
    ./go.sum \
    ./node_modules \
    ./public \
    ./resources 
}

prepare () {
  if [[ "$PREPARE" = true ]]; then
    clean

    echo "=====> prepare phase"

    hugo mod get -u
    hugo mod npm pack
  
    npm install
  else
    echo "=====> skip prepare"
  fi
}

self_hosted_legacy() {
  tmp_dir=self-hosted-legacy-tmp
  destination=static/self-hosted-legacy

  mkdir -p static
  rm -rf "$destination"

  hugo \
    --contentDir self-hosted-legacy \
    --cleanDestinationDir \
    --destination "$tmp_dir" \
    --environment self-hosted-legacy \
    "$@"

  mv "$tmp_dir" "$destination"
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case "$key" in
  -h|--help)
    usage
    exit 0
    ;;
  -p|--port)
    PORT="$2"
    shift
    shift
    ;;
  -D|--buildDrafts)
    WITHDRAFTS=true
    shift
    ;;
  --nobuildDrafts)
    WITHDRAFTS=false
    shift
    ;;
  --prepare)
    PREPARE=true
    shift
    ;;
  --noprepare)
    PREPARE=false
    shift
    ;;
  *) # unknown option
    POSITIONAL+=("$1")
    shift
    ;;
esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters

if [[ $# -gt 0 ]]; then
  COMMAND="$1"
  shift
fi

HUGO_OPTS=()
HUGO_OPTS+=(--environment "$ENVIRONMENT")
if [[ "$WITHDRAFTS" = "true" ]]; then
  HUGO_OPTS+=(--buildDrafts)
fi

case "$COMMAND" in
  self-hosted-legacy-server)
    self_hosted_legacy --baseURL "http://localhost:$PORT/self-hosted-legacy" server
    ;;
  server)
    prepare
    self_hosted_legacy --baseURL "http://localhost:$PORT/self-hosted-legacy"
    HUGO_OPTS+=(--port "$PORT")
    hugo server "${HUGO_OPTS[@]}"
    ;;
  prepare)
    prepare
    ;;
  generate)
    prepare
    self_hosted_legacy
    hugo "${HUGO_OPTS[@]}"
    ;;
  clean)
    clean
    ;;
  *)
    usage
    ;;
esac
